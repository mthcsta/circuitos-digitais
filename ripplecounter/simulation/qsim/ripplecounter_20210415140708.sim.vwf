/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2020  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("D0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("D0[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D0";
}

SIGNAL("D0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D0";
}

SIGNAL("D0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D0";
}

SIGNAL("D0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D0";
}

SIGNAL("D0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D0";
}

SIGNAL("D0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D0";
}

SIGNAL("D0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D0";
}

SIGNAL("D1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("D1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D1";
}

SIGNAL("D1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D1";
}

SIGNAL("D1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D1";
}

SIGNAL("D1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D1";
}

SIGNAL("D1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D1";
}

SIGNAL("D1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D1";
}

SIGNAL("D1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D1";
}

TRANSITION_LIST("CLK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
	}
}

TRANSITION_LIST("D0[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.966;
			LEVEL 1 FOR 21.794;
			LEVEL 0 FOR 20.126;
			LEVEL 1 FOR 42.662;
			LEVEL 0 FOR 17.269;
			LEVEL 1 FOR 119.943;
			LEVEL 0 FOR 20.126;
			LEVEL 1 FOR 19.874;
			LEVEL 0 FOR 20.126;
			LEVEL 1 FOR 59.874;
			LEVEL 0 FOR 20.126;
			LEVEL 1 FOR 42.662;
			LEVEL 0 FOR 17.269;
			LEVEL 1 FOR 119.943;
			LEVEL 0 FOR 20.126;
			LEVEL 1 FOR 19.874;
			LEVEL 0 FOR 20.126;
			LEVEL 1 FOR 59.874;
			LEVEL 0 FOR 20.126;
			LEVEL 1 FOR 42.662;
			LEVEL 0 FOR 17.269;
			LEVEL 1 FOR 119.943;
			LEVEL 0 FOR 20.126;
			LEVEL 1 FOR 19.874;
			LEVEL 0 FOR 20.126;
			LEVEL 1 FOR 59.874;
			LEVEL 0 FOR 13.24;
		}
	}
}

TRANSITION_LIST("D0[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.282;
			LEVEL 1 FOR 101.857;
			LEVEL 0 FOR 40.121;
			LEVEL 1 FOR 79.879;
			LEVEL 0 FOR 20.19;
			LEVEL 1 FOR 2.61;
			LEVEL 0 FOR 17.321;
			LEVEL 1 FOR 19.948;
			LEVEL 0 FOR 42.901;
			LEVEL 1 FOR 97.03;
			LEVEL 0 FOR 40.121;
			LEVEL 1 FOR 79.879;
			LEVEL 0 FOR 20.19;
			LEVEL 1 FOR 2.61;
			LEVEL 0 FOR 17.321;
			LEVEL 1 FOR 19.948;
			LEVEL 0 FOR 42.901;
			LEVEL 1 FOR 97.03;
			LEVEL 0 FOR 40.121;
			LEVEL 1 FOR 79.879;
			LEVEL 0 FOR 20.19;
			LEVEL 1 FOR 2.61;
			LEVEL 0 FOR 17.321;
			LEVEL 1 FOR 19.948;
			LEVEL 0 FOR 42.901;
			LEVEL 1 FOR 30.891;
		}
	}
}

TRANSITION_LIST("D0[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.984;
			LEVEL 1 FOR 43.27;
			LEVEL 0 FOR 18.739;
			LEVEL 1 FOR 182.678;
			LEVEL 0 FOR 17.322;
			LEVEL 1 FOR 19.959;
			LEVEL 0 FOR 42.872;
			LEVEL 1 FOR 38.43;
			LEVEL 0 FOR 18.739;
			LEVEL 1 FOR 182.678;
			LEVEL 0 FOR 17.322;
			LEVEL 1 FOR 19.959;
			LEVEL 0 FOR 42.872;
			LEVEL 1 FOR 38.43;
			LEVEL 0 FOR 18.739;
			LEVEL 1 FOR 182.678;
			LEVEL 0 FOR 17.322;
			LEVEL 1 FOR 19.959;
			LEVEL 0 FOR 42.872;
			LEVEL 1 FOR 31.176;
		}
	}
}

TRANSITION_LIST("D0[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.432;
			LEVEL 1 FOR 21.72;
			LEVEL 0 FOR 20.204;
			LEVEL 1 FOR 42.58;
			LEVEL 0 FOR 17.351;
			LEVEL 1 FOR 39.865;
			LEVEL 0 FOR 22.958;
			LEVEL 1 FOR 38.413;
			LEVEL 0 FOR 18.764;
			LEVEL 1 FOR 79.865;
			LEVEL 0 FOR 20.204;
			LEVEL 1 FOR 19.796;
			LEVEL 0 FOR 20.204;
			LEVEL 1 FOR 42.58;
			LEVEL 0 FOR 17.351;
			LEVEL 1 FOR 39.865;
			LEVEL 0 FOR 22.958;
			LEVEL 1 FOR 38.413;
			LEVEL 0 FOR 18.764;
			LEVEL 1 FOR 79.865;
			LEVEL 0 FOR 20.204;
			LEVEL 1 FOR 19.796;
			LEVEL 0 FOR 20.204;
			LEVEL 1 FOR 42.58;
			LEVEL 0 FOR 17.351;
			LEVEL 1 FOR 39.865;
			LEVEL 0 FOR 22.958;
			LEVEL 1 FOR 38.413;
			LEVEL 0 FOR 18.764;
			LEVEL 1 FOR 79.865;
			LEVEL 0 FOR 20.204;
			LEVEL 1 FOR 19.796;
			LEVEL 0 FOR 13.848;
		}
	}
}

TRANSITION_LIST("D0[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.048;
			LEVEL 1 FOR 21.788;
			LEVEL 0 FOR 20.187;
			LEVEL 1 FOR 19.813;
			LEVEL 0 FOR 20.187;
			LEVEL 1 FOR 2.558;
			LEVEL 0 FOR 38.819;
			LEVEL 1 FOR 18.436;
			LEVEL 0 FOR 22.89;
			LEVEL 1 FOR 17.11;
			LEVEL 0 FOR 20.187;
			LEVEL 1 FOR 139.813;
			LEVEL 0 FOR 20.187;
			LEVEL 1 FOR 19.813;
			LEVEL 0 FOR 20.187;
			LEVEL 1 FOR 2.558;
			LEVEL 0 FOR 38.819;
			LEVEL 1 FOR 18.436;
			LEVEL 0 FOR 22.89;
			LEVEL 1 FOR 17.11;
			LEVEL 0 FOR 20.187;
			LEVEL 1 FOR 139.813;
			LEVEL 0 FOR 20.187;
			LEVEL 1 FOR 19.813;
			LEVEL 0 FOR 20.187;
			LEVEL 1 FOR 2.558;
			LEVEL 0 FOR 38.819;
			LEVEL 1 FOR 18.436;
			LEVEL 0 FOR 22.89;
			LEVEL 1 FOR 17.11;
			LEVEL 0 FOR 20.187;
			LEVEL 1 FOR 139.813;
			LEVEL 0 FOR 14.164;
		}
	}
}

TRANSITION_LIST("D0[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.298;
			LEVEL 1 FOR 21.884;
			LEVEL 0 FOR 61.558;
			LEVEL 1 FOR 58.442;
			LEVEL 0 FOR 20.193;
			LEVEL 1 FOR 99.807;
			LEVEL 0 FOR 20.193;
			LEVEL 1 FOR 59.807;
			LEVEL 0 FOR 61.558;
			LEVEL 1 FOR 58.442;
			LEVEL 0 FOR 20.193;
			LEVEL 1 FOR 99.807;
			LEVEL 0 FOR 20.193;
			LEVEL 1 FOR 59.807;
			LEVEL 0 FOR 61.558;
			LEVEL 1 FOR 58.442;
			LEVEL 0 FOR 20.193;
			LEVEL 1 FOR 99.807;
			LEVEL 0 FOR 20.193;
			LEVEL 1 FOR 59.807;
			LEVEL 0 FOR 13.818;
		}
	}
}

TRANSITION_LIST("D0[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.297;
			LEVEL 0 FOR 43.316;
			LEVEL 1 FOR 98.526;
			LEVEL 0 FOR 20.195;
			LEVEL 1 FOR 82.577;
			LEVEL 0 FOR 17.354;
			LEVEL 1 FOR 63.451;
			LEVEL 0 FOR 37.897;
			LEVEL 1 FOR 98.526;
			LEVEL 0 FOR 20.195;
			LEVEL 1 FOR 82.577;
			LEVEL 0 FOR 17.354;
			LEVEL 1 FOR 63.451;
			LEVEL 0 FOR 37.897;
			LEVEL 1 FOR 98.526;
			LEVEL 0 FOR 20.195;
			LEVEL 1 FOR 82.577;
			LEVEL 0 FOR 17.354;
			LEVEL 1 FOR 63.451;
			LEVEL 0 FOR 30.284;
		}
	}
}

TRANSITION_LIST("D1[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.64;
			LEVEL 1 FOR 327.053;
			LEVEL 0 FOR 320.156;
			LEVEL 1 FOR 348.151;
		}
	}
}

TRANSITION_LIST("D1[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.306;
			LEVEL 1 FOR 995.694;
		}
	}
}

TRANSITION_LIST("D1[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.38;
			LEVEL 1 FOR 648.143;
			LEVEL 0 FOR 319.37;
			LEVEL 1 FOR 28.107;
		}
	}
}

TRANSITION_LIST("D1[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.495;
			LEVEL 1 FOR 327.045;
			LEVEL 0 FOR 320.164;
			LEVEL 1 FOR 348.296;
		}
	}
}

TRANSITION_LIST("D1[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.515;
			LEVEL 1 FOR 327.065;
			LEVEL 0 FOR 320.144;
			LEVEL 1 FOR 319.856;
			LEVEL 0 FOR 28.42;
		}
	}
}

TRANSITION_LIST("D1[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.537;
			LEVEL 1 FOR 327.071;
			LEVEL 0 FOR 668.392;
		}
	}
}

TRANSITION_LIST("D1[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.211;
			LEVEL 0 FOR 648.138;
			LEVEL 1 FOR 347.651;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "D0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5, 6, 7, 8;
}

DISPLAY_LINE
{
	CHANNEL = "D0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "D0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "D0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "D0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "D0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "D0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "D0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "D1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
	CHILDREN = 10, 11, 12, 13, 14, 15, 16;
}

DISPLAY_LINE
{
	CHANNEL = "D1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "D1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "D1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "D1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "D1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "D1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "D1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 9;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
